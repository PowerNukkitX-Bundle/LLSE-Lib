name: package
on:
  push:
  workflow_dispatch:

jobs:
  check-files:
    name: 检查仓库文件
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}
    steps:
      - name: 检出仓库内容
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 检查文件改动情况
        id: check-changed-files
        uses: tj-actions/changed-files@v11.4

      - name: 输出更改文件列表
        run: echo ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

  test:
    timeout-minutes: 5
    needs: check-files
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v3

      - name: checkout PNX source
        uses: actions/checkout@v3
        with:
          repository: 'PowerNukkitX/PowerNukkitX'
          path: 'core'

      - name: checkout LLSE Lib TestRuntime
        uses: actions/checkout@v3
        with:
          repository: 'PowerNukkitX/LLSE-Lib-TestRuntime'
          path: 'env'

      - name: setup-graalvm-ce
        uses: rinx/setup-graalvm-ce@v0.0.5
        with:
          graalvm-version: "22.1.0"
          java-version: "java17"
          native-image: "false"

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: get-pom-version
        id: pom-version
        uses: CptMokoena/maven-get-version-action@1.0.3
        with:
          path: core

      - name: setup running environment
        run: |
          cd env
          curl https://github.com/PowerNukkitX/PNX-CLI/releases/download/v0.0.6/PNX-CLI-Linux-x86.zip -o PNX-CLI-Linux-x86.zip -L
          unzip -j PNX-CLI-Linux-x86.zip && chmod +x pnx
          cd ../
          cd core/ && mvn -B package -DskipTests=true -Darguments="-Dmaven.javadoc.skip=true" -P dev
          cp target/libs -R ../env && cp target/powernukkitx-${{ steps.pom-version.outputs.version }}.jar ../env
          cd ../ && mkdir -p env/plugins && cp @LLSELib @Test -R env/plugins

      - name: run test
        run: |
          cd env && ls && ./pnx start --stdin=control.txt
          value=`cat result.txt`
          readarray -d ';' -t strarr <<<"$value"
          error=${strarr[1]}
          if (($error > 0)); then
              echo "测试失败,失败数量:$error"
              exit 1
            else
              echo "测试成功"
          fi
        id: test-result

  build:
    if: github.event_name == 'push' && (!contains(github.ref_name, 'patch'))
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@master

      - name: move
        run: |
          mkdir $GITHUB_WORKSPACE/src
          mv $GITHUB_WORKSPACE/@LLSELib $GITHUB_WORKSPACE/src/@LLSELib

      - name: zip full plugin
        run: |
          cd src
          zip -r LLSELib-full.zip @LLSELib
          cd ..

      - name: Archive LLSELib-full
        uses: actions/upload-artifact@v3
        with:
          name: LLSELib-full
          path: src/LLSELib-full.zip

      - name: compress
        uses: nizarmah/auto-minify@v2.1
        with:
          overwrite: true
          directory: src/@LLSELib
          js_engine: uglify-js

      - name: zip minify plugin
        run: |
          cd src
          rm -rf @LLSELib/jsconfig.json
          zip -r LLSELib.zip @LLSELib
          cd ..

      - name: Archive LLSELib
        uses: actions/upload-artifact@v3
        with:
          name: LLSELib
          path: src/LLSELib.zip

      - name: Read version in plugin.yml
        id: plugin-data
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: src/@LLSELib/plugin.yml
          version: version

      - name: Release new version
        uses: ncipollo/release-action@v1
        if: github.event_name == 'push' && contains(github.ref_name, 'master') && contains(github.event.commits[0].message, '+u')
        with:
          artifacts: "src/LLSELib-full.zip,src/LLSELib.zip"
          tag: ${{ steps.plugin-data.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.ref_name }}
          allowUpdates: true